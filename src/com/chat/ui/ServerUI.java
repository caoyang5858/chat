/*
 * ServerUI.java
 *
 * Created on __DATE__, __TIME__
 */

package com.chat.ui;

import java.awt.Component;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.Timer;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import com.chat.bean.UserBean;
import com.chat.server.Server;

/**
 *
 * @author  __USER__
 */
public class ServerUI extends javax.swing.JFrame {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	/** Creates new form ServerUI */
	private Server server;
	private DefaultTableModel model;
	private JLabel lbBg;
	public ServerUI() {
		server = new Server();
		initComponents();
		addListeners();
	}

	public void showList(){
		model = (DefaultTableModel) this.jTable1.getModel();
		for (int index = model.getRowCount() - 1; index >= 0; index--) {
            model.removeRow(index);
        }
		for(int i=0;i<server.getServerData().getOnlineListSize();i++){
			UserBean user = server.getServerData().getOnlineListUser(i);
			model.addRow(new Object[]{user.getUserName(),user,user.getIP(),user.getPort()});
		}
		
		this.jTable1.updateUI();
	}
	
	private void addListeners(){
		this.jButton1.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				server.startServer();
				new Thread(server).start();
				
			}
		});
		
		this.jButton2.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				server.stopServer();
			}
		});
		
		
		int delay = 2000; //milliseconds
		  ActionListener taskPerformer = new ActionListener() {
		      public void actionPerformed(ActionEvent evt) {
		          showList();
		      }
		  };
		  new Timer(delay, taskPerformer).start();
	}
	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	//GEN-BEGIN:initComponents
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {

		jButton1 = new javax.swing.JButton();
		jButton2 = new javax.swing.JButton();
		jScrollPane1 = new javax.swing.JScrollPane();
		jTable1 = new javax.swing.JTable();

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
		setTitle("Server");
		setIconImage(new javax.swing.ImageIcon(
				"src\\com\\chat\\ui\\dog_left.png").getImage());
		setResizable(false);//取消最大化
		
		//居中显示
		int w = (Toolkit.getDefaultToolkit().getScreenSize().width) / 3;
		int h = (Toolkit.getDefaultToolkit().getScreenSize().height) / 9;
		setLocation(w, h);

		jButton1.setFont(new java.awt.Font("新宋体", 0, 12));
		jButton1.setText("\u5f00\u542f\u670d\u52a1");
		
		jButton2.setFont(new java.awt.Font("新宋体", 0, 12));
		jButton2.setText("\u5173\u95ed\u670d\u52a1");
        
		String cols[] = new String[] { "在线用户","头像", "IP", "端口" };
		Object rows[][] = new Object[][]{
			
		};
		model =new DefaultTableModel(
				rows, cols);
		jTable1.setModel(model);
		MyTableCellRenderer render = new MyTableCellRenderer();
		render.setHorizontalAlignment(SwingConstants.CENTER);
		jTable1.getColumnModel().getColumn(1).setCellRenderer(render);
		jTable1.setRowHeight(50);
		jScrollPane1.setViewportView(jTable1);

		
		lbBg = new JLabel();
		lbBg.setIcon(new ImageIcon("src\\com\\chat\\ui\\bgchat.jpg"));
		lbBg.add(this.jButton1);
		lbBg.add(this.jButton2);
		lbBg.add(this.jScrollPane1);
		lbBg.setBounds(0, 0, 400, 400);
		
		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(
				getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGroup(
				javax.swing.GroupLayout.Alignment.TRAILING,
				layout.createSequentialGroup().addGap(44, 44, 44).addComponent(
						jButton1).addPreferredGap(
						javax.swing.LayoutStyle.ComponentPlacement.RELATED,
						131, Short.MAX_VALUE).addComponent(jButton2).addGap(63,
						63, 63)).addGroup(
				layout.createSequentialGroup().addContainerGap().addComponent(
						jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE,
						375, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addContainerGap(15, Short.MAX_VALUE)));
		layout.setVerticalGroup(layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGroup(
				layout.createSequentialGroup().addGap(28, 28, 28).addGroup(
						layout.createParallelGroup(
								javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(jButton2).addComponent(jButton1))
						.addGap(33, 33, 33).addComponent(jScrollPane1,
								javax.swing.GroupLayout.PREFERRED_SIZE, 248,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addContainerGap()));

		getContentPane().add(lbBg);
		pack();
	}// </editor-fold>
	//GEN-END:initComponents

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new ServerUI().setVisible(true);
			}
		});
	}

	//GEN-BEGIN:variables
	// Variables declaration - do not modify
	private javax.swing.JButton jButton1;
	private javax.swing.JButton jButton2;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JTable jTable1;
	// End of variables declaration//GEN-END:variables

}

class MyTableCellRenderer extends DefaultTableCellRenderer {

	
	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private ImageIcon logo1,logo2,logo3,logo4,logo5,logo6,logo7,logo8,logo9,logo10,logo11; 
	private JLabel lb1,lb2,lb3,lb4,lb5,lb6,lb7,lb8,lb9,lb10,lb11;
	public MyTableCellRenderer(){
		logo1 = new ImageIcon("src\\com\\chat\\logo\\1.png"); 
		logo2 = new ImageIcon("src\\com\\chat\\logo\\2.png");
		logo3 = new ImageIcon("src\\com\\chat\\logo\\3.png");
		logo4 = new ImageIcon("src\\com\\chat\\logo\\4.png");
		logo5 = new ImageIcon("src\\com\\chat\\logo\\5.png");
		logo6 = new ImageIcon("src\\com\\chat\\logo\\6.png");
		logo7 = new ImageIcon("src\\com\\chat\\logo\\7.png");
		logo8 = new ImageIcon("src\\com\\chat\\logo\\8.png");
		logo9 = new ImageIcon("src\\com\\chat\\logo\\9.png");
		logo10 = new ImageIcon("src\\com\\chat\\logo\\10.png");
		logo11= new ImageIcon("src\\com\\chat\\logo\\11.png");
		lb1 = new JLabel(logo1);
		lb2 = new JLabel(logo2);
		lb3 = new JLabel(logo3);
		lb4 = new JLabel(logo4);
		lb5 = new JLabel(logo5);
		lb6 = new JLabel(logo6);
		lb7 = new JLabel(logo7);
		lb8 = new JLabel(logo8);
		lb9 = new JLabel(logo9);
		lb10 = new JLabel(logo10);
		lb11 = new JLabel(logo11);
		
		
	}
	public Component getTableCellRendererComponent(JTable table, Object value,
			boolean isSelected, boolean hasFocus, int row, int column) {

		
		if (value instanceof UserBean) {
			UserBean user = (UserBean)value;
			int logo =user.getLogo();
			switch(logo) { 
			case 1 :return  lb1; 
			
			case 2 :return lb2; 
		 
			case 3 :return lb3;
			
			case 4:return lb4;
			
			case 5:return lb5; 
		   
			case 6:return lb6;
		
			case 7:return lb7;
		
			case 8:return lb8;
		
			case 9:return lb9;
		
			case 10:return lb10;
		
			case 11:return lb11;
		
			default : 
				break; 
			} 

		} else {
			this.setHorizontalAlignment(CENTER);
		}
		return null;
	}
}